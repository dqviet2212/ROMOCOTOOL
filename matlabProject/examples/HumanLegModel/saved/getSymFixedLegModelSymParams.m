function symFixedLegModelParams = getSymFixedLegModelSymParams(L1, L2, L3, l1, l2, l3, m1, m2, m3)
    %% Base
    % 'fixed': if the base is fixed to the world coordinate frame
    % 'free': if the base is moved to the world coordinate frame
    base.type = 'fixed';
    if strcmp(base.type, 'fixed')
        base.origin.xyz = [0; 0; 0];
        base.origin.rpy = [0; 0; 0];
        base.mass = 0;
        base.inertia = zeros(3);
    else
        base.origin.xyz = sym('pB', [3, 1]);
        base.origin.rpy = sym('rB', [3, 1]);
        base.mass = sym('mB');
        base.inertia = sym('iB', [3, 3]);
    end    
    
    %% Joints
    % Joint1    
    joint(1).origin.xyz = [0; 0; 0];
    joint(1).origin.rpy = [0; 0; 0];    
    % Joint2    
    joint(2).origin.xyz = [0; 0; L1];
    joint(2).origin.rpy = [0; 0; 0];    
    % Joint3    
    joint(3).origin.xyz = [0; 0; L2];
    joint(3).origin.rpy = [0; 0; 0];    
    
    %% Links
    % Link1    
    link(1).origin.xyz = [0; 0; l1];
    link(1).origin.rpy = [0; 0; 0];
    link(1).mass = m1;
    link(1).inertia = [(1/12)*m1*L1^2, 0,                   0;...
                       0,              (1/12)*m1*L1^2,      0;...
                       0,              0,                   0];
    % Link2    
    link(2).origin.xyz = [0; 0; l2];
    link(2).origin.rpy = [0; 0; 0];
    link(2).mass = m2;
    link(2).inertia = [(1/12)*m2*L2^2, 0,                   0;...
                       0,              (1/12)*m2*L2^2,      0;...
                       0,              0,                   0];
                   
    % Link3    
    link(3).origin.xyz = [l3; 0; 0];
    link(3).origin.rpy = [0; 0; 0];
    link(3).mass = m3;
    link(3).inertia = [0,              0,                   0;...
                       0,              (1/12)*m1*L3^2,      0;...
                       0,              0,                   (1/12)*m1*L3^2];


%%
symBasePhysicalParams = [base.origin.xyz;...
                        base.origin.rpy;...
                        base.mass;...
                        base.inertia(1, 1);...
                        base.inertia(1, 2);...
                        base.inertia(1, 3);...
                        base.inertia(2, 2);...
                        base.inertia(2, 3);...
                        base.inertia(3, 3)];
symJointPhysicalParams = [joint(1).origin.xyz;...
                          joint(1).origin.rpy;...
                          joint(2).origin.xyz;...
                          joint(2).origin.rpy;...
                          joint(3).origin.xyz;...
                          joint(3).origin.rpy];
symLinkPhysicalParams = [link(1).origin.xyz;...
                         link(1).origin.rpy;...
                         link(1).mass;...
                         link(1).inertia(1, 1);...
                         link(1).inertia(1, 2);...
                         link(1).inertia(1, 3);...
                         link(1).inertia(2, 2);...
                         link(1).inertia(2, 3);...
                         link(1).inertia(3, 3);...
                         link(2).origin.xyz;...
                         link(2).origin.rpy;...
                         link(2).mass;...
                         link(2).inertia(1, 1);...
                         link(2).inertia(1, 2);...
                         link(2).inertia(1, 3);...
                         link(2).inertia(2, 2);...
                         link(2).inertia(2, 3);...
                         link(2).inertia(3, 3);...
                         link(3).origin.xyz;...
                         link(3).origin.rpy;...
                         link(3).mass;...
                         link(3).inertia(1, 1);...
                         link(3).inertia(1, 2);...
                         link(3).inertia(1, 3);...
                         link(3).inertia(2, 2);...
                         link(3).inertia(2, 3);...
                         link(3).inertia(3, 3)];

symFixedLegModelParams = [symBasePhysicalParams; symJointPhysicalParams; symLinkPhysicalParams];
end