function link12Rot = getLink12Rotation(in1,in2)
%GETLINK12ROTATION
%    LINK12ROT = GETLINK12ROTATION(IN1,IN2)

%    This function was generated by the Symbolic Math Toolbox version 8.0.
%    28-Sep-2018 18:21:11

%======================================================================%
% Description: This function computes the rotation matrix of the link12
% link12Rot = getLink12Rotation(physicalParams, stateVariable)
% @Inputs:
% physicalParams: Physical parameters of the dynamical system - column vector
% stateVariable: State variable of the dynamical system - column vector
% @Output:
% link12Rot: Rotation matrix of the link12 - 3x3 matrix
% Version: 1.0
% Author: Quoc-Viet Dang
%======================================================================%
j11po = in1(6,:);
j11ro = in1(5,:);
j11yo = in1(7,:);
l12po = in1(31,:);
l12ro = in1(30,:);
l12yo = in1(32,:);
q11 = in2(1,:);
q12 = in2(2,:);
t2 = sparse(sin(j11po));
t3 = sparse(cos(j11po));
t4 = sparse(cos(j11yo));
t5 = sparse(sin(j11yo));
t6 = sparse(cos(j11ro));
t7 = sparse(sin(j11ro));
t8 = sparse(t3.^2);
t9 = sparse(sin(q11));
t10 = sparse(t5.*t7);
t36 = sparse(t2.*t4.*t6);
t11 = sparse(t10-t36);
t12 = sparse(t2.*t11);
t13 = sparse(t4.^2);
t14 = sparse(t8.*t13);
t15 = sparse(t5.*t6);
t16 = sparse(t2.*t4.*t7);
t17 = sparse(t15+t16);
t37 = sparse(t3.*t5.*t17);
t18 = sparse(t12+t14-t37);
t19 = sparse(cos(q11));
t20 = sparse(t5.*t7.*t8);
t21 = sparse(t2.*t3.*t6);
t22 = sparse(t2.*t3.*t4);
t23 = sparse(t20+t21+t22);
t24 = sparse(cos(l12po));
t25 = sparse(cos(l12ro));
t26 = sparse(sin(l12po));
t27 = sparse(sin(l12ro));
t28 = sparse(t4.*t7);
t29 = sparse(t2.*t5.*t6);
t30 = sparse(t28+t29);
t31 = sparse(t4.*t5.*t8);
t32 = sparse(t4.*t6);
t46 = sparse(t2.*t5.*t7);
t33 = sparse(t32-t46);
t34 = sparse(t3.*t5.*t33);
t45 = sparse(t2.*t30);
t35 = sparse(t31+t34-t45);
t38 = sparse(t9.*t18);
t39 = sparse(t19.*t23);
t40 = sparse(t38+t39);
t41 = sparse(sin(l12yo));
t42 = sparse(cos(l12yo));
t43 = sparse(t9.*t23);
t47 = sparse(t18.*t19);
t44 = sparse(t43-t47);
t48 = sparse(cos(q12));
t49 = sparse(t24.*t25.*t40);
t50 = sparse(t24.*t27.*t35);
t51 = sparse(t49+t50-t26.*t44);
t52 = sparse(sin(q12));
t53 = sparse(t25.*t41);
t54 = sparse(t26.*t27.*t42);
t55 = sparse(t53+t54);
t56 = sparse(t35.*t55);
t57 = sparse(t27.*t41);
t67 = sparse(t25.*t26.*t42);
t58 = sparse(t57-t67);
t59 = sparse(t24.*t42.*t44);
t60 = sparse(t56+t59-t40.*t58);
t61 = sparse(t17.*t33);
t62 = sparse(t3.*t4.*t17);
t68 = sparse(t3.*t7.*t11);
t63 = sparse(t61+t62-t68);
t64 = sparse(t6.*t7.*t8);
t65 = sparse(t3.*t7.*t33);
t70 = sparse(t2.*t17);
t66 = sparse(t64+t65-t70);
t69 = sparse(t9.*t63);
t81 = sparse(t19.*t66);
t71 = sparse(t69-t81);
t72 = sparse(t33.^2);
t73 = sparse(t3.*t7.*t30);
t74 = sparse(t37-t72+t73);
t75 = sparse(t19.*t63);
t76 = sparse(t9.*t66);
t77 = sparse(t75+t76);
t78 = sparse(t27.*t42);
t79 = sparse(t25.*t26.*t41);
t80 = sparse(t78+t79);
t82 = sparse(t25.*t42);
t106 = sparse(t26.*t27.*t41);
t83 = sparse(t82-t106);
t84 = sparse(t26.*t77);
t85 = sparse(t24.*t27.*t74);
t86 = sparse(t24.*t25.*t71);
t87 = sparse(t84+t85+t86);
t88 = sparse(t58.*t71);
t89 = sparse(t24.*t42.*t77);
t90 = sparse(t88+t89-t55.*t74);
t91 = sparse(t6.^2);
t92 = sparse(t8.*t91);
t93 = sparse(t12-t73+t92);
t94 = sparse(t17.*t30);
t95 = sparse(t3.*t6.*t11);
t96 = sparse(t3.*t4.*t11);
t97 = sparse(t94+t95+t96);
t98 = sparse(t19.*t93);
t99 = sparse(t9.*t97);
t100 = sparse(t98+t99);
t101 = sparse(t30.*t33);
t102 = sparse(t3.*t6.*t30);
t107 = sparse(t3.*t5.*t11);
t103 = sparse(t101+t102-t107);
t104 = sparse(t9.*t93);
t108 = sparse(t19.*t97);
t105 = sparse(t104-t108);
t109 = sparse(t26.*t105);
t110 = sparse(t24.*t27.*t103);
t111 = sparse(t109+t110-t24.*t25.*t100);
t112 = sparse(t58.*t100);
t113 = sparse(t55.*t103);
t114 = sparse(t112+t113-t24.*t42.*t105);
link12Rot = sparse([1,2,3,1,2,3,1,2,3],[1,1,1,2,2,2,3,3,3],[-t51.*t52-t48.*t60,t48.*t90-t52.*t87,t48.*t114+t52.*t111,-t35.*t83+t40.*t80+t24.*t41.*(t43-t47),t71.*t80-t74.*t83-t24.*t41.*t77,t80.*t100+t83.*t103+t24.*t41.*(t104-t108),t48.*t51-t52.*t60,t48.*t87+t52.*t90,-t48.*t111+t52.*t114],3,3);
