function jointAccel = getForwardDynamics(in1,in2,in3)
%GETFORWARDDYNAMICS
%    JOINTACCEL = GETFORWARDDYNAMICS(IN1,IN2,IN3)

%    This function was generated by the Symbolic Math Toolbox version 8.0.
%    01-Oct-2018 18:24:07

%======================================================================%
% Description: This function gives the forward(direct) dynamics of robot
% jointAccel = getForwardDynamics([M, C, G], states, controls)
% @Inputs:
% M: Inertia matrix of the dynamical system
% C: Coriolis matrix of the dynamical system
% G: Gravity matrix of the dynamical system
% states: State variable of the dynamical system - column vector
% controls: Control inputs of the dynamical system - column vector
% @Output:
% jointAccel: Accelerations of joint variables of the dynamical system
% Version: 1.0
% Author: Quoc-Viet Dang
%======================================================================%
C1_1 = in1(5);
C1_2 = in1(7);
C2_1 = in1(6);
C2_2 = in1(8);
G1 = in1(9);
G2 = in1(10);
M1_1 = in1(1);
M1_2 = in1(3);
M2_1 = in1(2);
M2_2 = in1(4);
dq11 = in2(3,:);
dq21 = in2(4,:);
u11 = in3(1,:);
u21 = in3(2,:);
t2 = M1_1.*M2_2;
t3 = t2-M1_2.*M2_1;
t4 = 1.0./t3;
jointAccel = [-t4.*(M1_2.*u21-M2_2.*u11-G2.*M1_2+G1.*M2_2+C1_1.*M2_2.*dq11-C2_1.*M1_2.*dq11+C1_2.*M2_2.*dq21-C2_2.*M1_2.*dq21);t4.*(M1_1.*u21-M2_1.*u11-G2.*M1_1+G1.*M2_1+C1_1.*M2_1.*dq11-C2_1.*M1_1.*dq11+C1_2.*M2_1.*dq21-C2_2.*M1_1.*dq21)];
