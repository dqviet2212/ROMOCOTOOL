function joint11PosJaco = getJoint11PositionJacobian(in1,in2)
%GETJOINT11POSITIONJACOBIAN
%    JOINT11POSJACO = GETJOINT11POSITIONJACOBIAN(IN1,IN2)

%    This function was generated by the Symbolic Math Toolbox version 8.0.
%    01-Oct-2018 18:39:06

%======================================================================%
% Description: This function computes the position jacobian of joint11
% joint11PosJaco = getJoint11PositionJacobian(physicalParams, stateVariable)
% @Inputs:
% physicalParams: Physical parameters of the dynamical system - column vector
% stateVariable: State variable of the dynamical system - column vector
% @Output:
% joint11PosJaco: Position jacobian of the joint11 - column vector
% Version: 1.0
% Author: Quoc-Viet Dang
%======================================================================%
j11xp = in1(9,:);
j11yp = in1(10,:);
j11zp = in1(11,:);
po = in2(5,:);
ro = in2(4,:);
yo = in2(6,:);
t2 = sin(po);
t3 = cos(po);
t4 = cos(yo);
t5 = sin(yo);
t6 = sin(ro);
t7 = cos(ro);
t8 = t5.*t7;
t9 = t2.*t4.*t6;
t10 = t8+t9;
t11 = t4.*t7;
t12 = t11-t2.*t5.*t6;
t13 = t4.*t6;
t14 = t2.*t5.*t7;
t15 = t13+t14;
t16 = t5.*t6;
t17 = t16-t2.*t4.*t7;
joint11PosJaco = reshape([1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,-j11yp.*t15-j11xp.*t17-j11zp.*t3.*t7,j11xp.*t10+j11yp.*t12-j11zp.*t3.*t6,j11zp.*t3-j11xp.*t2.*t4+j11yp.*t2.*t5,j11zp.*t2.*t6+j11xp.*t3.*t4.*t6-j11yp.*t3.*t5.*t6,-j11zp.*t2.*t7-j11xp.*t3.*t4.*t7+j11yp.*t3.*t5.*t7,-j11xp.*t3.*t5-j11yp.*t3.*t4,-j11yp.*t10+j11xp.*t12,j11xp.*t15-j11yp.*t17,0.0,0.0,0.0],[3,7]);
