function joint11Vel = getJoint11Velocity(in1,in2)
%GETJOINT11VELOCITY
%    JOINT11VEL = GETJOINT11VELOCITY(IN1,IN2)

%    This function was generated by the Symbolic Math Toolbox version 8.0.
%    01-Oct-2018 18:39:07

%======================================================================%
% Description: This function computes the velocity of joint11
% joint11Vel = getJoint11Velocity(physicalParams, stateVariable)
% @Inputs:
% physicalParams: Physical parameters of the dynamical system - column vector
% stateVariable: State variable of the dynamical system - column vector
% @Output:
% joint11Vel: Velocity of the joint11 - column vector
% Version: 1.0
% Author: Quoc-Viet Dang
%======================================================================%
dpo = in2(12,:);
dpx = in2(8,:);
dpy = in2(9,:);
dpz = in2(10,:);
dro = in2(11,:);
dyo = in2(13,:);
j11xp = in1(9,:);
j11yp = in1(10,:);
j11zp = in1(11,:);
po = in2(5,:);
ro = in2(4,:);
yo = in2(6,:);
t2 = cos(po);
t3 = cos(yo);
t4 = sin(po);
t5 = sin(yo);
t6 = sin(ro);
t7 = cos(ro);
t8 = t5.*t7;
t9 = t3.*t4.*t6;
t10 = t8+t9;
t11 = t3.*t7;
t12 = t11-t4.*t5.*t6;
t13 = t3.*t6;
t14 = t4.*t5.*t7;
t15 = t13+t14;
t16 = t5.*t6;
t17 = t16-t3.*t4.*t7;
joint11Vel = [dpx-dyo.*(j11yp.*t2.*t3+j11xp.*t2.*t5)+dpo.*(j11zp.*t2-j11xp.*t3.*t4+j11yp.*t4.*t5);dpy+dpo.*(j11zp.*t4.*t6+j11xp.*t2.*t3.*t6-j11yp.*t2.*t5.*t6)-dro.*(j11yp.*t15+j11xp.*t17+j11zp.*t2.*t7)-dyo.*(j11yp.*t10-j11xp.*t12);dpz-dpo.*(j11zp.*t4.*t7+j11xp.*t2.*t3.*t7-j11yp.*t2.*t5.*t7)+dro.*(j11xp.*t10+j11yp.*t12-j11zp.*t2.*t6)+dyo.*(j11xp.*t15-j11yp.*t17)];
