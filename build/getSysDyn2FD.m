function accelerations = getSysDyn2FD(in1,in2,in3)
%GETSYSDYN2FD
%    ACCELERATIONS = GETSYSDYN2FD(IN1,IN2,IN3)

%    This function was generated by the Symbolic Math Toolbox version 8.0.
%    13-Sep-2018 17:57:56

%======================================================================%
% Description: This function gives the forward(direct) dynamics of system
% accelerations = getSysDyn2FD(states, controls, [M, C, G])
% @Inputs:
% states: State variable of the dynamical system - column vector
% controls: Control inputs of the dynamical system - column vector
% M: Inertia matrix of the dynamical system
% C: Coriolis matrix of the dynamical system
% G: Gravity matrix of the dynamical system
% @Output:
% d2q: Accelerations of joint variables of the dynamical system
% Version: 1.0
% Author: Quoc-Viet Dang
%======================================================================%
C1_1 = in3(5);
C1_2 = in3(7);
C2_1 = in3(6);
C2_2 = in3(8);
G1 = in3(9);
G2 = in3(10);
M1_1 = in3(1);
M1_2 = in3(3);
M2_1 = in3(2);
M2_2 = in3(4);
dq1 = in1(3,:);
dq2 = in1(4,:);
u1 = in2(1,:);
t2 = sparse(M1_1.*M2_2);
t3 = sparse(t2-M1_2.*M2_1);
t4 = sparse(1.0./t3);
accelerations = sparse([1,2],[1,1],[t4.*(M2_2.*u1+G2.*M1_2-G1.*M2_2-C1_1.*M2_2.*dq1+C2_1.*M1_2.*dq1-C1_2.*M2_2.*dq2+C2_2.*M1_2.*dq2),-t4.*(M2_1.*u1+G2.*M1_1-G1.*M2_1-C1_1.*M2_1.*dq1+C2_1.*M1_1.*dq1-C1_2.*M2_1.*dq2+C2_2.*M1_1.*dq2)],2,1);
